#!/bin/sh

# This script computes the paths of all files needed by any of the
# preprocessing or experiment-running apps in TextGrounder -- in particular
# in the Geolocate portion.  Note that there are multiple corpora
# (and possibly multiple corpora, e.g. different dumps of Wikipedia at
# different times), and typically multiple files per corpus.

# You need to set the following environment variables on input:

# 1. TEXTGROUNDER_DIR: Always required, points to top level of TextGrounder
#                      distribution.
# 2. Files pointing to the corpora and auxiliary files.  There are various
#    ways to get these files located:
#
#    a. At the lowest level, you can directly set the relevant environment
#       variables.  There are three of them:
#
#       TG_WIKIPEDIA_DIR: location of Wikipedia data files
#       TG_TWITTER_DIR: location of Twitter data files
#       TG_AUX_DIR: location of auxiliary files (currently only the World
#                   Gazetteer, needed only when running the `geotag-toponym`
#                   app)
#
#    b. If you have these files in a directory structure like the one on
#       the UTexas comp ling machines, you can set TG_GROUPS_DIR to the
#       root of that directory structure.  This assumes that the Wikipedia
#       data is in `corpora/wikipedia`, the Twitter data is in
#       `corpora/twitter-geotext` (i.e. the GeoText Twitter corpus
#       specifically), and the aux data is in `projects/textgrounder/data`.
#
#    c. If you're actually on the UTexas comp ling machines, which put the
#       above directories under `/groups`, or you have exactly the same
#       structure on another machine, just set TG_ON_COMP_LING_MACHINES to
#       a non-empty value, and the variables will all get set properly.
#
#    d. If you're on the UTexas Longhorn cluster, you can use the data
#       stored under `/scratch/01683/benwing` by setting TG_ON_LONGHORN to
#       a non-empty value, and the variables will all get set properly.
#
#    e. If you're running under Hadoop, set TG_USE_HDFS to a non-blank
#       value; then, TG_GROUPS_DIR will be set to the value of TG_HADOOP_DIR
#       (see below; actually refers to a directory in the Hadoop File System),
#       and the above data-file variables will be set appropriately.  Use
#       the script 'tg-copy-data-to-hadoop' to copy data files to the
#       Hadoop File System underneath TG_HADOOP_DIR.
#
# 3. PCL_TRAVEL_DIR: Optional; location of PCL travel corpus and related files.
#
# 4. NO_USE_PERMUTED: Optional; if non-blank, don't use permuted version of
#                     Wikipedia data files.
#
# 5. DUMP_PREFIX: Optional; if set, should specify the prefix of a dump file,
#                 which will be used for the dump file and all files computed
#                 from the dump file.  An example prefix is 'enwiki-20111007',
#                 which indicates the English Wikipedia dump of Oct 7, 2011.
#                 (This format comes from the naming of dump files on the
#                 Wikipedia servers; we didn't make it up.) If not set, will
#                 use one of the current dumps that have been completely
#                 preprocessed -- currently 'enwiki-20100905', the version
#                 used in Wing and Baldridge 2011.
#
# 6. TG_HADOOP_DIR: Optional; location of corpus and TextGrounder data files
#                   in the Hadoop File System (HDFS).  By default, set to the
#                   relative directory 'textgrounder-data', which means it
#                   is relative to your home directory in HDFS, which is
#                   normally /user/$USER.  See also the variable TG_USE_HDFS,
#                   described above.

if [ -z "$TEXTGROUNDER_DIR" ]; then
  echo "Must set TEXTGROUNDER_DIR to top level of TextGrounder distribution"
  exit 1
fi

TG_HADOOP_DIR=${TG_HADOOP_DIR:-textgrounder-data}

if [ -n "$TG_USE_HDFS" ]; then
  TG_GROUPS_DIR=$TG_HADOOP_DIR
elif [ -n "$TG_ON_COMP_LING_MACHINES" ]; then
  TG_GROUPS_DIR=/groups
elif [ -n "$TG_ON_LONGHORN" ]; then
  TG_GROUPS_DIR=/scratch/01683/benwing
fi

if [ -n "$TG_GROUPS_DIR" ]; then
  TG_WIKIPEDIA_DIR=${TG_WIKIPEDIA_DIR:-$TG_GROUPS_DIR/corpora/wikipedia}
  TG_TWITTER_DIR=${TG_TWITTER_DIR:-$TG_GROUPS_DIR/corpora/twitter-geotext}
  TG_AUX_DIR=${TG_AUX_DIR:-$TG_GROUPS_DIR/projects/textgrounder/data}
fi

if [ -z "$TG_WIKIPEDIA_DIR" ]; then
  echo "Must set TG_WIKIPEDIA_DIR to location of Wikipedia data files"
  exit 1
fi

if [ -z "$TG_TWITTER_DIR" ]; then
  echo "TG_TWITTER_DIR should be set to the location of Twitter data files"
  echo "Proceeding, because may not need to use these files"
  TG_TWITTER_DIR="/nonexistent-location/download-textgrounder-twitter-files-please"
fi

if [ -z "$TG_AUX_DIR" ]; then
  echo "TG_AUX_DIR should be set to the location of aux data files"
  echo "Proceeding, because may not need to use these files (only needed"
  echo "when using --mode=geotag-toponyms)"
  TG_AUX_DIR="/nonexistent-location/download-textgrounder-aux-files-please"
fi

if [ -z "$PCL_TRAVEL_DIR" ]; then
  PCL_TRAVEL_DIR="/nonexistent-location/download-pcl-travel-files-please"
fi

TRCONLL_DEV_DIR="$PCL_TRAVEL_DIR/data/trconlldevtest/dev"

GEOTEXT_CORPUS_TOP="$TG_TWITTER_DIR/GeoText.2010-10-12"
#GEOTEXT_INPUT_DIR="$GEOTEXT_CORPUS_TOP/processed_data"
GEOTEXT_OUTPUT_DIR="$TG_TWITTER_DIR/output-40-docthresh"

if [ -z "$DUMP_PREFIX" ]; then
  DUMP_PREFIX="enwiki-20100905"
fi

if [ -z "$NO_USE_PERMUTED" ]; then
  if [ -e "$TG_WIKIPEDIA_DIR/$DUMP_PREFIX-permuted-pages-articles.xml.bz2" ]; then
    DUMP_PREFIX="$DUMP_PREFIX-permuted"
  fi
fi

PAGES_ARTICLES_PREFIX="$DUMP_PREFIX-pages-articles"

WDIR="$TG_WIKIPEDIA_DIR"

# The partial names of the various files we generate or read from -- i.e.
# minus any dump prefix or path.
ORIG_DOCUMENT_DATA_SUFFIX="document-data.txt"
COMBINED_DOCUMENT_DATA_SUFFIX="combined-document-data.txt"
COORDS_SUFFIX="coords.txt"
COORD_COUNTS_SUFFIX="counts-only-coord-documents.txt"
ALL_COUNTS_SUFFIX="counts-all-documents.txt"
COORD_WORDS_SUFFIX="text-only-coord-documents.txt"
COORD_WORDS_UNTOK_SUFFIX="text-untok-only-coord-documents.txt"
ALL_WORDS_SUFFIX="text-all-documents.txt"
ALL_WORDS_UNTOK_SUFFIX="text-untok-all-documents.txt"
COORD_LINKS_SUFFIX="links-only-coord-documents.txt"
ALL_LINKS_SUFFIX="links-all-documents.txt"
TOPONYM_EVAL_SUFFIX="toponym-eval.txt"
DISAMBIG_ID_SUFFIX="disambig.id.txt"
TITLE2ID_SUFFIX="title2id.txt"
DUMP_SUFFIX="xml.bz2"

# The full names of the various files we generate or read from during
# preprocessing, including the dump prefix, but without any path info.
OUT_GAZETTEER_FILE="world-dataen-fixed.txt"
OUT_ORIG_DOCUMENT_DATA_FILE="$DUMP_PREFIX-$ORIG_DOCUMENT_DATA_SUFFIX"
OUT_COMBINED_DOCUMENT_DATA_FILE="$DUMP_PREFIX-$COMBINED_DOCUMENT_DATA_SUFFIX"
OUT_COORDS_FILE="$DUMP_PREFIX-$COORDS_SUFFIX"
OUT_COORD_COUNTS_FILE="$DUMP_PREFIX-$COORD_COUNTS_SUFFIX"
OUT_ALL_COUNTS_FILE="$DUMP_PREFIX-$ALL_COUNTS_SUFFIX"
OUT_COORD_WORDS_FILE="$DUMP_PREFIX-$COORD_WORDS_SUFFIX"
OUT_COORD_WORDS_UNTOK_FILE="$DUMP_PREFIX-$COORD_WORDS_UNTOK_SUFFIX"
OUT_ALL_WORDS_FILE="$DUMP_PREFIX-$ALL_WORDS_SUFFIX"
OUT_ALL_WORDS_UNTOK_FILE="$DUMP_PREFIX-$ALL_WORDS_UNTOK_SUFFIX"
OUT_COORD_LINKS_FILE="$DUMP_PREFIX-$COORD_LINKS_SUFFIX"
OUT_ALL_LINKS_FILE="$DUMP_PREFIX-$ALL_LINKS_SUFFIX"
OUT_TOPONYM_EVAL_FILE="$DUMP_PREFIX-$TOPONYM_EVAL_SUFFIX"
OUT_DISAMBIG_ID_FILE="$PAGES_ARTICLES_PREFIX.$DISAMBIG_ID_SUFFIX"
OUT_TITLE2ID_FILE="$PAGES_ARTICLES_PREFIX.$TITLE2ID_SUFFIX"
OUT_DUMP_FILE="$PAGES_ARTICLES_PREFIX.$DUMP_SUFFIX"

# The full pathnames of the various files we read from during experiment-
# running, including full path info.
IN_GAZETTEER_FILE="$TG_AUX_DIR/$OUT_GAZETTEER_FILE"
IN_ORIG_DOCUMENT_DATA_FILE="$WDIR/$OUT_ORIG_DOCUMENT_DATA_FILE"
IN_COMBINED_DOCUMENT_DATA_FILE="$WDIR/$OUT_COMBINED_DOCUMENT_DATA_FILE"
IN_COORDS_FILE="$WDIR/$OUT_COORDS_FILE"
IN_COORD_COUNTS_FILE="$WDIR/$OUT_COORD_COUNTS_FILE"
IN_COORD_LINKS_FILE="$WDIR/$OUT_COORD_LINKS_FILE"
IN_TOPONYM_EVAL_FILE="$WDIR/$OUT_TOPONYM_EVAL_FILE"
IN_DISAMBIG_ID_FILE="$WDIR/$OUT_DISAMBIG_ID_FILE"
IN_TITLE2ID_FILE="$WDIR/$OUT_TITLE2ID_FILE"
IN_DUMP_FILE="$WDIR/$OUT_DUMP_FILE"

# Include local configuration if it exists

if [ -e "$TEXTGROUNDER_DIR/bin/local-config-geolocate" ]; then
  . "$TEXTGROUNDER_DIR/bin/local-config-geolocate"
fi

