#!/bin/bash

JARS=`echo $TEXTGROUNDER_DIR/lib/*.jar $TEXTGROUNDER_DIR/lib_managed/*/*.jar $TEXTGROUNDER_DIR/output/*.jar $TEXTGROUNDER_DIR/target/*.jar | tr ' ' ':'`
SCALA_LIB="$HOME/.sbt/boot/scala-2.9.1/lib/scala-library.jar"

CP="$TEXTGROUNDER_DIR/target/classes:$SCALA_LIB:$JARS:$CLASSPATH"

FIRSTARG="$1"

MEMORY=2g

case $FIRSTARG in
  [0-9] | [0-9][0-9]) 
	MEMORY="${FIRSTARG}g"
	shift
	;;
    *) ;;
esac

JAVA=$JAVA_HOME/bin/java

JAVA_COMMAND="$JAVA -Xmx$MEMORY -classpath $CP"
SCALA_COMMAND="scala -classpath $CP"

CMD=$1
shift

help()
{
cat <<EOF
TextGrounder 0.3.0 commands: 

  build update compile  build TextGrounder from source using SBT
  build                 enter SBT command line, to issue further commands
  build COMMAND ...     run SBT using some other arbitrary command(s)
  import-gazetteer      import a gazetteer from raw form to serialized form
  import-corpus         import a corpus from raw form to serialized form
  preprocess-labelprop  preprocess label propagation
  geotext-lp            run GeoText label propagation resolver
  resolve               run the toponomy resolver
  write-to-kml          write a resolved corpus to visualizable KML format
  eval                  evaluated a resolved corpus against a gold corpus
  run                   run the main method of a given class

Include --help with any option for more information
EOF
}


if [ $CMD = 'build' ]; then

    $JAVA -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m -Xmx512M -Xss2M -jar $TEXTGROUNDER_DIR/bin/sbt-launch-*.jar ${1+"$@"}

else  

    CLASS=

    case $CMD in
	resolve) CLASS=opennlp.textgrounder.app.RunResolver;;
        geotext-lp) CLASS=opennlp.textgrounder.app.GeoTextLabelProp;;
	import-gazetteer) CLASS=opennlp.textgrounder.app.ImportGazetteer;;
	import-corpus) CLASS=opennlp.textgrounder.app.ImportCorpus;;
	preprocess-labelprop) CLASS=opennlp.textgrounder.app.LabelPropPreproc;;
	write-to-kml) CLASS=opennlp.textgrounder.app.WriteCorpusToKML;;
	eval) CLASS=opennlp.textgrounder.app.EvaluateCorpus;;
	run) CLASS=$1; shift;;
	help) help; exit 1;;
	*) echo "Unrecognized command: $CMD"; help; exit 1;;
    esac

    $JAVA_COMMAND $CLASS ${1+"$@"}

fi
