#!/bin/bash

JARS=`echo $TEXTGROUNDER_DIR/lib/*.jar $TEXTGROUNDER_DIR/lib_managed/*/*.jar $TEXTGROUNDER_DIR/output/*.jar $TEXTGROUNDER_DIR/target/*.jar | tr ' ' ':'`
SCALA_LIB="$TEXTGROUNDER_DIR/project/boot/scala-2.8.1/lib/scala-library.jar"

CP=$TEXTGROUNDER_DIR/target/classes:$SCALA_LIB:$JARS:$CLASSPATH

FIRSTARG=$1

MEMORY=2g

case $FIRSTARG in
  [0-9] | [0-9][0-9]) 
	MEMORY="${FIRSTARG}g"
	shift
	;;
    *) ;;
esac

JAVA_COMMAND="java -Xmx$MEMORY -classpath $CP"

CMD=$1
shift

help()
{
cat <<EOF
TextGrounder 0.1 commands: 

  import-gazetteer  	import a gazetteer from raw form to serialized form
  import-corpus			import a corpus from raw form to serialized form
  preprocess-labelprop	preprocess label propagation
  resolve           	run the toponomy resolver
  write-to-kml			write a resolved corpus to visualizable KML format
  eval					evaluated a resolved corpus against a gold corpus
  run               	run the main method of a given class

Include --help with any option for more information
EOF
}


if [ $CMD = 'build' ]; then

    java -jar $TEXTGROUNDER_DIR/project/build/sbt-launch-0.7.4.jar "$@"

else 

    CLASS=

    case $CMD in
	resolve) CLASS=opennlp.textgrounder.app.RunResolver;;
	import-gazetteer) CLASS=opennlp.textgrounder.app.ImportGazetteer;;
	import-corpus) CLASS=opennlp.textgrounder.app.ImportCorpus;;
	preprocess-labelprop) CLASS=opennlp.textgrounder.app.LabelPropPreproc;;
	write-to-kml) CLASS=opennlp.textgrounder.app.WriteCorpusToKML;;
	eval) CLASS=opennlp.textgrounder.app.EvaluateCorpus;;
	run) CLASS=$1; shift;;
	help) help; exit 1;;
	*) echo "Unrecognized command: $CMD"; help; exit 1;;
    esac

    $JAVA_COMMAND $CLASS $*

fi